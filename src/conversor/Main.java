package conversor; // sirve para separar el código (modularidad) - es package se puede reutilizar en diferentes proyetos
// porción de código que se puede usar en diferentes proyectos

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.util.List;
import javax.swing.JTextField;

/**
 *
 * @author Luciano
 * @author Gisele
 * @author Lionel
 */

// clase MAIN - es la que ejecuta el programa
public class Main extends javax.swing.JFrame {

// es un ATRIBUTO privado de tipo LISTA que contiene objetos CONVERSOR (clase PADRE) -
// la lista se llama CONVERSORES
// la inicializa como un nuevo array
    private List<Conversor> conversores = new ArrayList<>();

// ATRIBUTO (variable) de tipo boolean 
    private boolean camino;
    

// CONSTRUCTOR del programa - acá se inicia el programa
    public Main() {

// llama el MÉTODO que crea el FORMULARIO
        initComponents();
        
        setTitle("Mi conversor");

// es una función para centrar la ventana
        setLocationRelativeTo(null);

//agrego a lista todas las clases hijas
        conversores.add(new CentimetrosPulgadasConversor());
        conversores.add(new KmsMillasConversor());
        conversores.add(new MetrosKmsConversor());
        conversores.add(new GalonLitrosConversor());
        conversores.add(new PieCmConversor());

// recorre la lista de conversores         
        for (Conversor conversor : conversores) {

// al objeto jcbConversion (combobox) - que se va agregando los items (conversores)
            jcbConversion.addItem(conversor.toString());
        }
// ejecuta el método setText        
        setText();
        
    }
    
    private Conversor getConversorSeleccionado(){
        return conversores.get(jcbConversion.getSelectedIndex());
    }

// llama al método - pone la etiqueta sin valor / los nombres de las etiquetas dependen de la clase hija seleccionada
    private void setText() {
        jlValor1.setText(getConversorSeleccionado().getLabelValor1());
        jlValor2.setText(getConversorSeleccionado().getLabelValor2());
    }

// cuando se pulsa ENTER o el boton CONVERTIR - se ejecuta este MÉTODO
    private String convertir (JTextField jtf){

// se definen las variables y sus tipos
        String valorString;
        Double valor;
        Double retorno;
        String retornoString;
        
// haga es la conversión de , por . - del requerimiento
        valorString = jtf.getText().replace(",", ".");
        

        try {
// convertir (parsear) el valor de tipo string en tipo numerico
            valor = Double.valueOf(valorString);

// si no puede convertir de string a número --- devuelve una excepcion 
        }
        catch (NumberFormatException e) {
// para mostrar el mensaje en el formulario por pantalla
            JOptionPane.showMessageDialog(this, "No se pudo convertir el numero '" + jtf.getText() + "'", "ERROR", JOptionPane.ERROR_MESSAGE);
// para mostrar mensaje por consola            
            System.out.println(e.getMessage()); 
            return null;
        }
        
// si pudo convertir el string en valor -- obtiene el conversor seleccionado, y ejecuta el METODO Convertir con el valor(getText)
        Conversor conversor = getConversorSeleccionado();
        retorno = conversor.convertir(valor, camino);
        retornoString = String.format("%.3f", retorno); // tengo que convertir el valor en string para mostrar en la casilla correspondiente
        return retornoString;
        
  
    }
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
// MÉTODO - lo que hace es crear el FORMULARIO
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlValor1 = new javax.swing.JLabel();
        jtfValor1 = new javax.swing.JTextField();
        jbConvertir = new javax.swing.JButton();
        jlValor2 = new javax.swing.JLabel();
        jtfValor2 = new javax.swing.JTextField();
        jcbConversion = new javax.swing.JComboBox<>();
        jlConversion = new javax.swing.JLabel();
        jlTitulo = new javax.swing.JLabel();
        jbConsigna = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlValor1.setText("jlValor1");

        jtfValor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfValor1ActionPerformed(evt);
            }
        });
        jtfValor1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfValor1KeyReleased(evt);
            }
        });

        jbConvertir.setText("Convertir");
        jbConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConvertirActionPerformed(evt);
            }
        });

        jlValor2.setText("jlValor2");

        jtfValor2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfValor2KeyReleased(evt);
            }
        });

        jcbConversion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbConversionItemStateChanged(evt);
            }
        });
        jcbConversion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbConversionActionPerformed(evt);
            }
        });

        jlConversion.setText("Conversión");

        jlTitulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTitulo.setText("Conversor");

        jbConsigna.setText("?");
        jbConsigna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsignaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlValor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlConversion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlValor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfValor1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfValor2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jcbConversion, 0, 175, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 98, Short.MAX_VALUE)
                        .addComponent(jbConvertir)
                        .addGap(53, 53, 53)
                        .addComponent(jbConsigna)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbConversion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlConversion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlValor1)
                    .addComponent(jtfValor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlValor2)
                    .addComponent(jtfValor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbConvertir)
                    .addComponent(jbConsigna))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfValor1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValor1KeyReleased
// es un MÉTODO que está asignado al evento del ENTER sobre el elemento 1
        camino = false;
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            jtfValor2.setText(convertir(jtfValor1));
        }
    }//GEN-LAST:event_jtfValor1KeyReleased

    private void jbConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConvertirActionPerformed
// es un MÉTODO que está asignado al evento del botón CONVERTIR sobre el elemento 
        if (camino) {
            jtfValor1.setText(convertir(jtfValor2));
        } else {
            jtfValor2.setText(convertir(jtfValor1));
        }
       

    }//GEN-LAST:event_jbConvertirActionPerformed

    private void jtfValor2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValor2KeyReleased
// es un MÉTODO que está asignado al evento del ENTER sobre el elemento 2
        camino = true;
        if(evt.getKeyChar()==KeyEvent.VK_ENTER){
            jtfValor1.setText(convertir(jtfValor2));
        }
    }//GEN-LAST:event_jtfValor2KeyReleased

    private void jcbConversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbConversionActionPerformed
        
    }//GEN-LAST:event_jcbConversionActionPerformed

    private void jtfValor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfValor1ActionPerformed
     
    }//GEN-LAST:event_jtfValor1ActionPerformed

    private void jcbConversionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbConversionItemStateChanged
// cuando cambias el combo se ejecuta es MÉTODO - etiquetas (nombre de los labels)        
        setText();
    }//GEN-LAST:event_jcbConversionItemStateChanged

    private void jbConsignaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsignaActionPerformed
 
        String text = "El conversor genérico debe tener las siguientes funcionalidades:\n" +
"\n" +
"✔ Contener al menor 5 tipos de conversores. Pueden incluir los dos vistos en clase.\n" +
"✔ Dos TextFields, con UN solo botón para convertir.\n" +
"✔ Presionando <ENTER> sobre los TextFields, debe convertir.\n" +
"✔ No contener código repetido, esto es reutilizar sentencias de código que se necesitan en eventos diferentes.\n" +
"✔ Manejo de error con Exceptions (ej.: NumberFormatException), mostrando un mensaje amigable via JOptionPane.\n" +
"✔ Si se ingresa la ',' (coma) como separador decimal, que se realice la conversión.\n" +
"✔ Basarse en lo hecho en clase, terniendo en cuenta el uso de la Herencia y el Polimorfismo.";
        JOptionPane.showMessageDialog(this, text, "INFO", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jbConsignaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbConsigna;
    private javax.swing.JButton jbConvertir;
    private javax.swing.JComboBox<String> jcbConversion;
    private javax.swing.JLabel jlConversion;
    private javax.swing.JLabel jlTitulo;
    private javax.swing.JLabel jlValor1;
    private javax.swing.JLabel jlValor2;
    private javax.swing.JTextField jtfValor1;
    private javax.swing.JTextField jtfValor2;
    // End of variables declaration//GEN-END:variables
}
